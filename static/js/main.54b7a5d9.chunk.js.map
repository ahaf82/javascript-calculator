{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","endOperator","multiDivide","plusMinus","maxDigits","initialState","displayInput","displayStore","stateDecimal","firstValueZero","firstValue","stateOperator","stateEquals","formula","numbers","id","value","CalcPad","props","e","this","setState","target","length","test","slice","replace","result","eval","numberPad","map","item","className","onClick","handleNumberClick","bind","handleOperatorClick","handleEqualsClick","deciClick","clearClick","React","Component"],"mappings":"4MAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC3FjEC,IAASC,OAAO,kBAAC,IAAD,MAAaC,SAASC,eAAe,kBDiB9C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,yBAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMwB,yBAAN,sBAEP/B,IAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,EAAO,CACX6B,QAAS,CAAE,iBAAkB,YAE5BxB,MAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BV,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAwB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OCxC/BE,I,ixCCNMoC,YAAc,UACdC,YAAc,OACdC,UAAY,OACZC,UAAY,GACZC,aAAe,CACbC,aAAc,EACdC,aAAc,IACdC,cAAc,EACdC,gBAAgB,EAChBC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,QAAS,IAIXC,QAAU,CAAC,CACfC,GAAI,OACJC,MAAO,KACP,CACAD,GAAI,MACJC,MAAO,KACP,CACAD,GAAI,MACJC,MAAO,KACP,CACAD,GAAI,QACJC,MAAO,KACP,CACAD,GAAI,OACJC,MAAO,KACP,CACAD,GAAI,OACJC,MAAO,KACP,CACAD,GAAI,MACJC,MAAO,KACP,CACAD,GAAI,QACJC,MAAO,KACP,CACAD,GAAI,QACJC,MAAO,KACP,CACAD,GAAI,OACJC,MAAO,MAIHC,Q,2BACJ,iBAAYC,GAAQ,IAAD,2JACjB,2SAAMA,KACD7C,MAAQgC,aAFI,E,+UAKDc,GACe,KAAzBC,KAAK/C,MAAMiC,aACbc,KAAKC,SAAS,CACZf,aAAca,EAAEG,OAAON,SAEW,IAA3BI,KAAK/C,MAAMsC,gBAAiD,IAAzBS,KAAK/C,MAAMuC,YACvDQ,KAAKC,SAAS,CACZd,aAAca,KAAK/C,MAAMkC,aAAea,KAAK/C,MAAMiC,aACnDA,aAAca,EAAEG,OAAON,MACvBL,eAAe,EACfH,cAAc,KAEoB,IAA3BY,KAAK/C,MAAMsC,gBAAkD,IAAzBS,KAAK/C,MAAMuC,YACxDQ,KAAKC,SAAS,CACZd,aAAca,KAAK/C,MAAMkC,aACzBD,aAAca,EAAEG,OAAON,MACvBL,eAAe,EACfH,cAAc,EACdI,aAAa,EACbF,YAAY,IAELU,KAAK/C,MAAMiC,aAAaiB,OAASnB,WAC3CgB,KAAKC,SAAS,CACXf,aAAcc,KAAK/C,MAAMiC,aAAea,EAAEG,OAAON,U,gCAK/CG,GACJC,KAAK/C,MAAMsC,cACbS,KAAKC,SAAS,CACZd,aAAca,KAAK/C,MAAMkC,aAAea,KAAK/C,MAAMiC,aACnDA,aAAc,KACdE,cAAc,EACdG,eAAe,KAEkB,IAA1BS,KAAK/C,MAAMmC,cACpBY,KAAKC,SAAS,CACZf,aAAcc,KAAK/C,MAAMiC,aAAea,EAAEG,OAAON,MACjDR,cAAc,M,0CAKAW,GACW,KAAzBC,KAAK/C,MAAMkC,eACbhC,QAAQC,IAAI,aACV4C,KAAK/C,MAAMkC,aAAa,KAEG,IAA3Ba,KAAK/C,MAAMsC,gBAAkD,IAAzBS,KAAK/C,MAAMuC,cAA+C,IAAxBQ,KAAK/C,MAAMqC,WACnFU,KAAKC,SAAS,CACZd,aAAca,KAAK/C,MAAMkC,aAAea,KAAK/C,MAAMiC,aACnDA,aAAca,EAAEG,OAAON,MACvBR,cAAc,EACdG,eAAe,EACfC,aAAa,KAEqB,IAA3BQ,KAAK/C,MAAMsC,gBAAkD,IAAzBS,KAAK/C,MAAMuC,cAA8C,IAAxBQ,KAAK/C,MAAMqC,WACzFU,KAAKC,SAAS,CACZd,aAAca,KAAK/C,MAAMiC,aACzBA,aAAca,EAAEG,OAAON,MACvBR,cAAc,EACdG,eAAe,EACfC,aAAa,EACbF,YAAY,KAEsB,IAA3BU,KAAK/C,MAAMsC,gBAAkD,IAAzBS,KAAK/C,MAAMuC,cAA+C,IAAxBQ,KAAK/C,MAAMqC,WAC1FU,KAAKC,SAAS,CACZd,aAAca,KAAK/C,MAAMiC,aACzBA,aAAca,EAAEG,OAAON,MACvBR,cAAc,EACdG,eAAe,EACfC,aAAa,EACbF,YAAY,IAELR,YAAYsB,KAAKJ,KAAK/C,MAAMiC,eAAiBH,UAAUqB,KAAKL,EAAEG,OAAON,QAAUI,KAAK/C,MAAMiC,aAAaiB,QAAU,EACzHH,KAAKC,SAAS,CACZf,aAAcc,KAAK/C,MAAMiC,aAAea,EAAEG,OAAON,MACjDR,cAAc,EACdG,eAAe,IAGfS,KAAKC,SAAS,CACZf,aAAca,EAAEG,OAAON,MACvBR,cAAc,EACdG,eAAe,M,4DAMtB,IAAIE,QAAUO,KAAK/C,MAAMkC,aAAaa,KAAK/C,MAAMiC,aAC7CL,YAAYuB,KAAKX,WACnBA,QAAQA,QAAQY,MAAM,GAAI,IAE5BZ,QAAUA,QAAQa,QAAQ,KAAM,KAChC,IAAIC,OAASC,KAAKf,SAClBO,KAAKC,SAAS,CACZd,aAAcoB,OACdrB,aAAcqB,OACdjB,YAAY,EACZF,cAAc,EACdG,eAAe,EACfC,aAAa,M,mCAKfQ,KAAKC,SAAShB,gB,+BAGN,IAAD,OACDwB,EAAYf,QAAQgB,KAAI,SAAAC,GAAI,OAAI,qEAAQhB,GAAIgB,EAAKhB,GAAIiB,UAAU,kBAAkBC,QAAS,EAAKC,kBAAkBC,KAAK,GAAOnB,MAAOe,EAAKf,OAAQe,EAAKf,UAC5J,OACE,sEACE,iEAAID,GAAG,SAAP,yBACA,kEAAKA,GAAG,mBACJ,gEAAGA,GAAG,kBAAkBK,KAAK/C,MAAMkC,cACnC,gEAAGQ,GAAG,WAAWK,KAAK/C,MAAMiC,eAEhC,kEAAKS,GAAG,UACLc,EACD,qEAAQd,GAAG,MAAMiB,UAAU,kBAAkBC,QAASb,KAAKgB,oBAAoBD,KAAKf,MAAOJ,MAAM,KAAjG,KACA,qEAAQD,GAAG,WAAWiB,UAAU,kBAAkBC,QAASb,KAAKgB,oBAAoBD,KAAKf,MAAOJ,MAAM,KAAtG,KACA,qEAAQD,GAAG,WAAWiB,UAAU,kBAAkBC,QAASb,KAAKgB,oBAAoBD,KAAKf,MAAOJ,MAAM,KAAtG,KACA,qEAAQD,GAAG,SAASiB,UAAU,kBAAkBC,QAASb,KAAKgB,oBAAoBD,KAAKf,MAAOJ,MAAM,KAApG,KACA,qEAAQD,GAAG,SAASiB,UAAU,kBAAkBC,QAAmC,KAAzBb,KAAK/C,MAAMkC,eAA+C,IAA1Ba,KAAK/C,MAAMmC,aAAwBY,KAAKiB,kBAAkBF,KAAKf,MAAQ,GAAIJ,MAAM,KAA3K,KACA,qEAAQD,GAAG,UAAUiB,UAAU,kBAAkBC,QAASb,KAAKkB,UAAUH,KAAKf,MAAOJ,MAAM,KAA3F,KACA,qEAAQD,GAAG,QAAQiB,UAAU,kBAAkBC,QAAS,kBAAI,EAAKM,eAAjE,e,SAtIYC,6CAAMC,WA6I5B5D,iDAASC,OACP,2DAACmC,QAAD,MAAalC,SAASC,eAAe,kBAGxBiC,+B","file":"static/js/main.54b7a5d9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CalcPad from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<CalcPad />, document.getElementById('js-calculator'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nconst endOperator = /[x+/-]$/,\n      multiDivide = /[x/]/,\n      plusMinus = /[+-]/,\n      maxDigits = 15,\n      initialState = {\n        displayInput: 0,\n        displayStore: '0',\n        stateDecimal: false,\n        firstValueZero: true,\n        firstValue: true,\n        stateOperator: false,\n        stateEquals: false,\n        formula: ''\n      };\n\n//Number Array\nconst numbers = [{\n  id: \"zero\",\n  value: \"0\"\n},{\n  id: \"one\",\n  value: \"1\"\n},{\n  id: \"two\",\n  value: \"2\"\n},{\n  id: \"three\",\n  value: \"3\"\n},{\n  id: \"four\",\n  value: \"4\"\n},{\n  id: \"five\",\n  value: \"5\"\n},{\n  id: \"six\",\n  value: \"6\"\n},{\n  id: \"seven\",\n  value: \"7\"\n},{\n  id: \"eight\",\n  value: \"8\"\n},{\n  id: \"nine\",\n  value: \"9\"\n}]\n\n\nclass CalcPad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleNumberClick(e)  {\n      if (this.state.displayInput=='0') {\n        this.setState({\n          displayInput: e.target.value\n        });\n      } else if (this.state.stateOperator===true && this.state.stateEquals===false) {\n        this.setState({\n          displayStore: this.state.displayStore + this.state.displayInput,\n          displayInput: e.target.value,\n          stateOperator: false,\n          stateDecimal: false\n        });\n      } else if (this.state.stateOperator===false && this.state.stateEquals===true) {\n        this.setState({\n          displayStore: this.state.displayStore,\n          displayInput: e.target.value,\n          stateOperator: false,\n          stateDecimal: false,\n          stateEquals: false,\n          firstValue: false\n        });\n      } else if (this.state.displayInput.length < maxDigits) {\n       this.setState({\n          displayInput: this.state.displayInput + e.target.value\n        });\n      }\n  }\n\n  deciClick(e) {\n    if (this.state.stateOperator) {\n      this.setState({\n        displayStore: this.state.displayStore + this.state.displayInput,\n        displayInput: '0.',\n        stateDecimal: true,\n        stateOperator: false\n      });\n    } else if (this.state.stateDecimal===false) {\n      this.setState({\n        displayInput: this.state.displayInput + e.target.value,\n        stateDecimal: true\n      });\n    }\n  }\n\n  handleOperatorClick(e) {\n    if (this.state.displayStore=='0') {\n      console.log(\"Hello You\");\n        this.state.displayStore='';\n    }\n    if (this.state.stateOperator===false && this.state.stateEquals===false && this.state.firstValue===true) {\n      this.setState({\n        displayStore: this.state.displayStore + this.state.displayInput,\n        displayInput: e.target.value,\n        stateDecimal: false,\n        stateOperator: true,\n        stateEquals: false\n      });\n    } else if (this.state.stateOperator===false && this.state.stateEquals===true && this.state.firstValue===false) {\n      this.setState({\n        displayStore: this.state.displayInput,\n        displayInput: e.target.value,\n        stateDecimal: false,\n        stateOperator: true,\n        stateEquals: false,\n        firstValue: true\n      });\n    } else if (this.state.stateOperator===false && this.state.stateEquals===false && this.state.firstValue===false) {\n      this.setState({\n        displayStore: this.state.displayInput,\n        displayInput: e.target.value,\n        stateDecimal: false,\n        stateOperator: true,\n        stateEquals: false,\n        firstValue: true\n      });\n    } else if (multiDivide.test(this.state.displayInput) && plusMinus.test(e.target.value) && this.state.displayInput.length <= 1) {\n       this.setState({\n         displayInput: this.state.displayInput + e.target.value,\n         stateDecimal: false,\n         stateOperator: true\n       });\n    } else {\n         this.setState({\n           displayInput: e.target.value,\n           stateDecimal: false,\n           stateOperator: true\n       });\n    }\n  }\n\n  handleEqualsClick() {\n    let formula = this.state.displayStore+this.state.displayInput;\n    if (endOperator.test(formula)) {\n      formula=formula.slice(0, -1);\n    }\n    formula = formula.replace(/x/g, \"*\");\n    let result = eval(formula);\n    this.setState({\n      displayStore: result,\n      displayInput: result,\n      firstValue: false,\n      stateDecimal: false,\n      stateOperator: false,\n      stateEquals: true\n    });\n  }\n\n  clearClick() {\n    this.setState(initialState);\n  }\n\n  render() {\n    const numberPad = numbers.map(item => <button id={item.id} className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value={item.value}>{item.value}</button>);\n    return (\n      <div>\n        <h1 id=\"title\">JavaScript Calculator</h1>\n        <div id=\"displayComplete\">\n            <p id=\"displayFormula\">{this.state.displayStore}</p>\n            <p id=\"display\">{this.state.displayInput}</p>\n        </div>\n        <div id=\"numPad\">\n          {numberPad}\n          <button id=\"add\" className=\"btn btn-warning\" onClick={this.handleOperatorClick.bind(this)} value=\"+\">+</button>\n          <button id=\"subtract\" className=\"btn btn-warning\" onClick={this.handleOperatorClick.bind(this)} value=\"-\">-</button>\n          <button id=\"multiply\" className=\"btn btn-warning\" onClick={this.handleOperatorClick.bind(this)} value=\"x\">*</button>\n          <button id=\"divide\" className=\"btn btn-warning\" onClick={this.handleOperatorClick.bind(this)} value=\"/\">/</button>\n          <button id=\"equals\" className=\"btn btn-warning\" onClick={(this.state.displayStore!=\"0\" && this.state.stateDecimal===false) ? this.handleEqualsClick.bind(this) : ''} value=\"=\">=</button>\n          <button id=\"decimal\" className=\"btn btn-warning\" onClick={this.deciClick.bind(this)} value=\".\">.</button>\n          <button id=\"clear\" className=\"btn btn-warning\" onClick={()=>this.clearClick()}>CLEAR</button>\n        </div>\n      </div>\n     );\n  }\n}\n\nReactDOM.render(\n  <CalcPad />, document.getElementById(\"js-calculator\")\n);\n\nexport default CalcPad;\n"],"sourceRoot":""}