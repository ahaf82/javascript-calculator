{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","endOperator","multiDivide","plusMinus","maxDigits","initialState","displayInput","displayStore","stateDecimal","firstValueZero","firstValue","stateOperator","stateEquals","formula","CalcPad","props","e","this","setState","target","value","length","test","slice","replace","result","eval","id","className","onClick","handleNumberClick","bind","handleOperatorClick","handleEqualsClick","deciClick","clearClick","React","Component"],"mappings":"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","file":"static/js/main.620b4998.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalcPad from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<CalcPad />, document.getElementById('js-calculator'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nconst endOperator = /[x+/-]$/,\n      multiDivide = /[x/]/,\n      plusMinus = /[+-]/,\n      maxDigits = 19,\n      initialState = {\n        displayInput: 0,\n        displayStore: ' ',\n        stateDecimal: false,\n        firstValueZero: true,\n        firstValue: true,\n        stateOperator: false,\n        stateEquals: false,\n        formula: ''\n      };\n\n\nclass CalcPad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleNumberClick(e)  {\n      if (this.state.displayInput=='0') {\n        this.setState({\n          displayInput: e.target.value\n        });\n      } else if (this.state.stateOperator===true && this.state.stateEquals===false) {\n        this.setState({\n          displayStore: this.state.displayStore + this.state.displayInput,\n          displayInput: e.target.value,\n          stateOperator: false,\n          stateDecimal: false\n        });\n      } else if (this.state.stateOperator===false && this.state.stateEquals===true) {\n        this.setState({\n          displayStore: this.state.displayStore,\n          displayInput: e.target.value,\n          stateOperator: false,\n          stateDecimal: false,\n          stateEquals: false,\n          firstValue: false\n        });\n      } else if (this.state.displayInput.length < maxDigits) {\n       this.setState({\n          displayInput: this.state.displayInput + e.target.value\n        });\n      }\n  }\n\n  deciClick(e) {\n    if (this.state.stateOperator) {\n      this.setState({\n        displayStore: this.state.displayStore + this.state.displayInput,\n        displayInput: '0.',\n        stateDecimal: true,\n        stateOperator: false\n      });\n    } else if (this.state.stateDecimal===false) {\n      this.setState({\n        displayInput: this.state.displayInput + e.target.value,\n        stateDecimal: true\n      });\n    }\n  }\n\n  handleOperatorClick(e) {\n    if (this.state.stateOperator===false && this.state.stateEquals===false && this.state.firstValue===true) {\n      this.setState({\n        displayStore: this.state.displayStore + this.state.displayInput,\n        displayInput: e.target.value,\n        stateDecimal: false,\n        stateOperator: true,\n        stateEquals: false\n      });\n    } else if (this.state.stateOperator===false && this.state.stateEquals===true && this.state.firstValue===false) {\n      this.setState({\n        displayStore: this.state.displayInput,\n        displayInput: e.target.value,\n        stateDecimal: false,\n        stateOperator: true,\n        stateEquals: false,\n        firstValue: true\n      });\n    } else if (this.state.stateOperator===false && this.state.stateEquals===false && this.state.firstValue===false) {\n      this.setState({\n        displayStore: this.state.displayInput,\n        displayInput: e.target.value,\n        stateDecimal: false,\n        stateOperator: true,\n        stateEquals: false,\n        firstValue: true\n      });\n    } else if (multiDivide.test(this.state.displayInput) && plusMinus.test(e.target.value) && this.state.displayInput.length <= 1) {\n       this.setState({\n         displayInput: this.state.displayInput + e.target.value,\n         stateDecimal: false,\n         stateOperator: true\n       });\n    } else {\n         this.setState({\n           displayInput: e.target.value,\n           stateDecimal: false,\n           stateOperator: true\n       });\n    }\n  }\n\n  handleEqualsClick() {\n    let formula = this.state.displayStore+this.state.displayInput;\n    if (endOperator.test(formula)) {\n      formula=formula.slice(0, -1);\n    }\n    console.log(formula);\n    formula = formula.replace(/x/g, \"*\");\n    let result = eval(formula);\n    console.log(result);\n    this.setState({\n      displayStore: result,\n      displayInput: result,\n      firstValue: false,\n      stateDecimal: false,\n      stateOperator: false,\n      stateEquals: true\n    });\n  }\n\n  clearClick() {\n    this.setState(initialState);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"title\">JavaScript Calculator</h1>\n        <div id=\"displayComplete\">\n            <p id=\"displayFormula\">{this.state.displayStore}</p>\n            <p id=\"display\">{this.state.displayInput}</p>\n        </div>\n        <div id=\"numPad\">\n          <button id=\"zero\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"0\">0</button>\n          <button id=\"one\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"1\">1</button>\n          <button id=\"two\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"2\">2</button>\n          <button id=\"three\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"3\">3</button>\n          <button id=\"four\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"4\">4</button>\n          <button id=\"five\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"5\">5</button>\n          <button id=\"six\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"6\">6</button>\n          <button id=\"seven\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"7\">7</button>\n          <button id=\"eight\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"8\">8</button>\n          <button id=\"nine\" className=\"btn btn-primary\" onClick={this.handleNumberClick.bind(this)} value=\"9\">9</button>\n          <button id=\"add\" className=\"btn btn-warning\" onClick={this.handleOperatorClick.bind(this)} value=\"+\">+</button>\n          <button id=\"subtract\" className=\"btn btn-warning\" onClick={this.handleOperatorClick.bind(this)} value=\"-\">-</button>\n          <button id=\"multiply\" className=\"btn btn-warning\" onClick={this.handleOperatorClick.bind(this)} value=\"x\">*</button>\n          <button id=\"divide\" className=\"btn btn-warning\" onClick={this.handleOperatorClick.bind(this)} value=\"/\">/</button>\n          <button id=\"equals\" className=\"btn btn-warning\" onClick={this.handleEqualsClick.bind(this)} value=\"=\">=</button>\n          <button id=\"decimal\" className=\"btn btn-warning\" onClick={this.deciClick.bind(this)} value=\".\">.</button>\n          <button id=\"clear\" className=\"btn btn-warning\" onClick={()=>this.clearClick()}>CLEAR</button>\n        </div>\n      </div>\n     );\n  }\n}\n\nReactDOM.render(\n  <CalcPad />, document.getElementById(\"js-calculator\")\n);\n\nexport default CalcPad;\n"],"sourceRoot":""}